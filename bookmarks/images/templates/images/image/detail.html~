{% extends "base.html" %}

{% block title %}{{ image.title }}{% endblock %}

{% block content %}
  <h1>{{ image.title }}</h1>
  {% load thumbnail %}
  {% thumbnail image.image "300" as im %}
    <a href="{{ image.image.url }}">
      <img src="{{ im.url }}" class="image-detail">
    </a>
  {% endthumbnail %}
  
  <!-- Using the  with  template tag is useful to prevent 
  Django from evaluating QuerySets multiple times. -->
  {% with total_likes=image.users_like.count users_like=image.users_like.all %}
    <div class="image-info">
      <div>
        <span class="count">
          <span class="total">{{ total_likes }}</span> like{{ total_likes|pluralize }}
        </span>
        <a href="#" data-id="{{ image.id }}" data-action="{% if request.user in users_like %}un{% endif %}like" class="like button">
          {% if request.user not in users_like %}
            Like
          {% else %}
            Unlike
          {% endif %}
        </a>
      </div>
      {{ image.description|linebreaks }}
    </div>
    <div class="image-likes">
      {% for user in users_like %}
        <div>
          <img src="{{ user.profile.photo.url }}">
          <p>{{ user.first_name }}</p>
        </div>
      {% empty %}
        Nobody likes this image yet.
      {% endfor %}
    </div>
  {% endwith %}
{% endblock %}
  
{% block domready %}
  $('a.like').click(function(e){
  console.log('like button clicked')
    
    // to avoid the default behavior of the a element. 
    // This will prevent from the link taking us anywhere.
    e.preventDefault();
    console.log('prevented default behaviour')
      
    // perform an asynchronous POST request to the server
    $.post('{% url "images:like" %}',
        
      // POST parameters dictionary to send in the request
      {
        id: $(this).data('id'),
        action: $(this).data('action')
      },
        
      // callback function that is executed when the HTTP response is received
      // data is the JsonResonse or any other data receives may it be XML ot Http headers
      function(data){
        if (data['status'] == 'ok')
        {
          console.log('inside callback function')
          // we store the previous action to provide the functionality of UNDO
          var previous_action = $('a.like').data('action');
            
          console.log('changing data action')
          // toggle data-action
          $('a.like').data('action', previous_action == 'like' ? 'unlike' : 'like');
            
          console.log('changing button text')
          // toggle link text
          $('a.like').text(previous_action == 'like' ? 'Unlike' : 'Like');
            
          console.log('updating total likes')
          // update total likes
          var previous_likes = parseInt($('span.count .total').text());
          $('span.count .total').text(previous_action == 'like' ? previous_likes + 1 : previous_likes - 1);
        }});
  });
{% endblock %}
